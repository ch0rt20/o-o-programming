public class BasicTypes
{

    /**TODO 00 изучите метод main, следуйте комментариям в коде.
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Раздел 1. byte
        // TODO 01 изучите первый раздел, обратите внимание на конструкцию System.out.println()
        System.out.println("--Раздел 1--"); // печатаем несколько минусов и название раздела, чтобы декорировать выводимую информацию

        byte b;          //объявление переменной типа byte с именем b
        //по щаблону: <тип> <имя переменной>;

        b = -11;         //присвоение переменной b значения 125
        b = (byte) (b + 1);     //присвоение переменной b суммы её текущего значения и единицы
        //   ^^^^ - это операция приведения к типу byte (так как результат сложения относится к int)

        System.out.println(b);  //вывод на экран текущего значения переменной b с помощью System.out.println()
        b += 10;                //присвоение переменной b суммы её текущего значения и 10 (операция сложение с присваиванием)
        System.out.println(b);  //вывод на экран текущего значения переменной b с помощью System.out.println()

        // TODO 02 запустите приложение щелкнув мышкой на зеленый треугольник, либо нажав горячую клавишу F6 первые три строки выведенные в консоль.
        // TODO 03 поэксперементируйте с первым разделом меняя исходное значение b. Добейтесь чтобы во второй строке выводился 0;

        // Раздел 2. char
        // TODO 04 изучите второй раздел, объясните разницу между конструкциями System.out.print() и System.out.println()
        System.out.println("--Раздел 2--");

        char c4 = 'r';   //одновременное объявление переменных типа char и их инициализация
        char c1 = 'c';   //обратите внимание на то, что в java символы берутся в одинарные кавычки
        char c3 = 'a';
        char c2 = 'h';
        // TODO 06 запустите приложение (F6), затем поменяйте предыдущие строки (39-42) местами и проверьте результат

        System.out.print(c1); //вывод на экран текущего значения каждой переменной
        System.out.print(c2);
        System.out.print(c3);
        System.out.println(c4); //вывод на экран текущего значения каждой переменной
        //или
        c1 = 'a';
        c2 = 'r';
        c3 = 'c';
        c4 = 'h';
        System.out.print(c3); //вывод на экран текущего значения каждой переменной
        System.out.print(c4);
        System.out.print(c1);
        System.out.println(c2);
        // TODO 05 поменяйте предыдущие строки (45-47) местами, проверьте результат запустив приложение.

        // TODO 07 модифицируйте код таким образом, чтобы на экран было выведено слово "char" (предложите 2 варианта)

        // Раздел 3. String
        System.out.println("--Раздел 3--");
        // TODO 08 изучите третий раздел и обратите внимание на отличия объявления уже рассмотренных переменных и String

        String s1 = new String(); //строка в java не принадлежит к базовым типам, т.е. является объектом.
        //Шаблон создания объекта: <имя класса> <имя ссылки на объект> = new <имя конструктора>();

        s1 = "Строковые значения в java заключаются в двойные кавычки"; // Присвоение значения объекту s1

        String s2 = "Строка состоит из символов "; // сокращенная форма объявления и создания объекта String
        // TODO 09 запустите приложение и изучите результаты выполнения 3-его раздела
        s1 = s1 + ' ' + s2;        //Для строковых значений операция сложения служит для объединения
        System.out.println(s1); // метод println() ждет в качестве аргумента строку, поэтому можно использовать операцию "+" и внутри его скобок(пример в разделе 4).

        s2 = s1 + c1 + c2 + c3 + c4 + ' ' + b; //к строке можно добавлять не только строку, как показано в примере. В  таком случае типы будут атоматически приведены.
        //s2 = c1 + c2 + c3 + c4 + b; //если раскоментировать эту строку - возникнет предупреждение о несоответсвии типов.
        // TODO 10 раскоментируйте строку 69 и изучите предупреждение
        System.out.println(s2);
        // TODO 11 модифицируйте код, чтобы предложения выводились через пробел

        // Раздел 4. int
        System.out.println("--Раздел 4--");
        // TODO 12 изучите четвертый раздел, обратите внимание на вывод значений переменных x и y

        int x, resultat; //одновременное объявление 2 переменных типа int
        x = 5;
        int y = 2;
        System.out.println("x = " + x + "; y = " + y); //вывод на экран объедененных строк и значений переменных
        resultat = x % y;
        System.out.println("Результат деления с остатком: " + resultat);
        resultat = x / 2;
        System.out.println("Результат деления нацело: " + resultat);

        System.out.println("Результат сравнения x = y: " + (x==y)); // вывод результата выполения логической операции сравения

        // TODO 13 поэксперементируйте со значениями переменных и операциями: остаток от деления по модулю(%), операции сравнения ">=", "==" и т.д.

        // Раздел 5. float
        System.out.println("--Раздел 5--");
        // TODO 14 изучите четвертый раздел, обратите внимание на разницу между выводимыми значениями результата одной и той же операции деления.
        float fx = 123.456f; // для явного указания на тип float добавляют "f", так как java по умолчанию трактует дробное число как double
        float fy = 789f;
        float fResultat = fx * fy;
        System.out.println("Результат умножения: " + fResultat);
        resultat = (int) fResultat;
        System.out.println("Результат умножения (int): " + resultat);

        // TODO 15 поэксперементируйте со значениями переменных и операциями: остаток от деления по модулю(%), операции сравнения ">=", "==" и т.д.

        System.out.println("--Раздел 6--");
        // Раздел 6. поразрядные операции
        // TODO 16 изучите раздел 6 и поэксперементируйте со значениями переменных

        byte b1 =0b101; // помещаем в переменную число 5 в 2-ичной системе
        byte b2 =0b010; // помещаем в переменную число 2 в 2-ичной системе
        byte res = (byte)(b1|b2); // выполнеяем поразрядное ИЛИ (логиское сложение)

        System.out.println(b1);   // выводим значение b1 в 10-ричной системе
        System.out.println("OR");
        System.out.println(b2);   // выводим значение b2 в 10-ричной системе
        System.out.println("=");
        System.out.println(res);  // выводим результат в 10-ричной системе. можно использовать Integer.toBinaryString(res) для вывода в 2-ичной системе
        System.out.println("NOT");
        System.out.println(~res); // выводим результат унарной логиской операции отрицание для результата
    }
}

